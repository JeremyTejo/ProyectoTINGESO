version: "3.8"
services:
  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - app1
      - app2
      - app3

  postgresql-db:
    image: postgres:latest
    volumes:
      - ./data/db:/var/lib/postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
    ports:
      - "5433:5432"

  app1:
    container_name: proyecto_tingeso1
    image: jeremylm10748/proyecto_tingeso
    ports:
      - "8091:8090"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql-db:5432/postgres?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 12345678
      SPRING_PROFILES_ACTIVE: docker
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - postgresql-db

  app2:
    container_name: proyecto_tingeso2
    image: jeremylm10748/proyecto_tingeso
    ports:
      - "8092:8090"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql-db:5432/postgres?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 12345678
      SPRING_PROFILES_ACTIVE: docker
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - postgresql-db

  app3:
    container_name: proyecto_tingeso3
    image: jeremylm10748/proyecto_tingeso
    ports:
      - "8093:8090"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql-db:5432/postgres?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 12345678
      SPRING_PROFILES_ACTIVE: docker
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - postgresql-db